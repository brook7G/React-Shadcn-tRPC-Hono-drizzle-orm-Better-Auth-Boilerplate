import '@orpc/client';
import '@orpc/shared';
import '@orpc/standard-server';
import '@orpc/contract';
import '@orpc/client/standard';
import { r as resolveFriendlyStandardHandleOptions } from './server.DZ5BIITo.mjs';

async function handleStandardServerPeerMessage(handler, peer, message, options) {
  const [id, request] = await peer.message(message);
  if (!request) {
    return;
  }
  const handle = createServerPeerHandleRequestFn(handler, options);
  await peer.response(id, await handle(request));
}
function createServerPeerHandleRequestFn(handler, options) {
  return async (request) => {
    const { response } = await handler.handle(
      { ...request, body: () => Promise.resolve(request.body) },
      resolveFriendlyStandardHandleOptions(options)
    );
    return response ?? { status: 404, headers: {}, body: "No procedure matched" };
  };
}

export { createServerPeerHandleRequestFn as c, handleStandardServerPeerMessage as h };
