import { ServerPeer, EncodedMessage, ServerPeerHandleRequestFn } from '@orpc/standard-server-peer';
import { C as Context } from '../../shared/server.B4BGqy3Y.mjs';
import { f as StandardHandler } from '../../shared/server.DBCUJijK.mjs';
import { F as FriendlyStandardHandleOptions } from '../../shared/server.CVKCo60T.mjs';
import '@orpc/client';
import '@orpc/contract';
import '@orpc/shared';
import '@orpc/standard-server';

type HandleStandardServerPeerMessageOptions<T extends Context> = Omit<FriendlyStandardHandleOptions<T>, 'prefix'>;
/**
 * @deprecated Use `createServerPeerRequestHandleFn` instead.
 */
declare function handleStandardServerPeerMessage<T extends Context>(handler: StandardHandler<T>, peer: ServerPeer, message: EncodedMessage, options: HandleStandardServerPeerMessageOptions<T>): Promise<void>;
declare function createServerPeerHandleRequestFn<T extends Context>(handler: StandardHandler<T>, options: HandleStandardServerPeerMessageOptions<T>): ServerPeerHandleRequestFn;

export { createServerPeerHandleRequestFn, handleStandardServerPeerMessage };
export type { HandleStandardServerPeerMessageOptions };
