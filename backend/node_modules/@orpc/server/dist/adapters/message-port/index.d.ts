import { SupportedMessagePort } from '@orpc/client/message-port';
import { MaybeOptionalOptions } from '@orpc/shared';
import { C as Context, R as Router } from '../../shared/server.B4BGqy3Y.js';
import { f as StandardHandler } from '../../shared/server.DPIFWpxG.js';
import { HandleStandardServerPeerMessageOptions } from '../standard-peer/index.js';
import { S as StandardRPCHandlerOptions } from '../../shared/server.COL12UTb.js';
import '@orpc/client';
import '@orpc/contract';
import '@orpc/standard-server';
import '@orpc/standard-server-peer';
import '../../shared/server.DNtJ-p60.js';
import '@orpc/client/standard';
import '../../shared/server.Cb6yD7DZ.js';

declare class MessagePortHandler<T extends Context> {
    private readonly standardHandler;
    constructor(standardHandler: StandardHandler<T>);
    upgrade(port: SupportedMessagePort, ...rest: MaybeOptionalOptions<HandleStandardServerPeerMessageOptions<T>>): void;
}

/**
 * RPC Handler for common message port implementations.
 *
 * @see {@link https://orpc.unnoq.com/docs/rpc-handler RPC Handler Docs}
 * @see {@link https://orpc.unnoq.com/docs/adapters/message-port Message Port Adapter Docs}
 */
declare class RPCHandler<T extends Context> extends MessagePortHandler<T> {
    constructor(router: Router<any, T>, options?: NoInfer<StandardRPCHandlerOptions<T>>);
}

export { MessagePortHandler, RPCHandler };
